name: Deploy Spring Boot to GCE (Prod)

on:
  push:
    branches: [ main ]

jobs:
  Deploy-PROD:
    runs-on: ubuntu-latest

    env:
      COMMIT_HASH: ${{ github.sha }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Set timestamp-based path (Asia/Seoul)
        run: |
          TIMESTAMP=$(TZ='Asia/Seoul' date +%Y-%m-%d_%H_%M_%S)
          echo "DEPLOY_PATH=${TIMESTAMP}_${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload build to S3
        run: |
          mkdir -p ./deploy
          cp ./build/libs/careerbee-0.0.1-SNAPSHOT.jar ./deploy/careerbee-api.jar
          echo "Uploading to: s3://${{ secrets.S3_BUCKET_NAME }}/be/$DEPLOY_PATH"
          aws s3 cp ./deploy "s3://${{ secrets.S3_BUCKET_NAME }}/be/$DEPLOY_PATH/" --recursive

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Trigger remote deploy script on EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "bash ~/release/deploy-be.sh $DEPLOY_PATH"

      - name: Notify Discord on Success
        if: success()
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          TIMESTAMP="${{ github.event.head_commit.timestamp }}"
          
          DESCRIPTION="**Repository:** \`${REPO}\`
          **Branch:** \`${BRANCH}\`
          **Commit:** \`${COMMIT_MSG}\`
          
          
          [🔗 실행 로그 보기](${RUN_URL})"
          
          jq -n \
            --arg desc "$DESCRIPTION" \
            --arg timestamp "$TIMESTAMP" \
            '{
              "embeds": [
                {
                  "title": "✅ 프로덕션 환경에 백엔드 배포 성공",
                  "description": $desc,
                  "color": 65280,
                  "footer": { "text": "GitHub Actions - PROD Deploy(BE)" },
                  "timestamp": $timestamp
                }
              ]
            }' > payload.json
          
          curl -H "Content-Type: application/json" \
                -X POST \
                -d @payload.json \
                ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          TIMESTAMP="${{ github.event.head_commit.timestamp }}"
          
          DESCRIPTION="**Repository:** \`${REPO}\`
          **Branch:** \`${BRANCH}\`
          **Commit:** \`${COMMIT_MSG}\`
          
          
          [🔗 실행 로그 보기](${RUN_URL})"
          
          jq -n \
            --arg desc "$DESCRIPTION" \
            --arg timestamp "$TIMESTAMP" \
            '{
              "embeds": [
                {
                  "title": "❌ 프로덕션 환경에 백엔드 배포 실패",
                  "description": $desc,
                  "color": 16711680,
                  "footer": { "text": "GitHub Actions - PROD Deploy(BE)" },
                  "timestamp": $timestamp
                }
              ]
            }' > payload.json
          
          curl -H "Content-Type: application/json" \
                -X POST \
                -d @payload.json \
                ${{ secrets.DISCORD_WEBHOOK_URL }}