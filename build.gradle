plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'

    // Sentry Gradle Plugin
    id "io.sentry.jvm.gradle" version "5.5.0"

    // Checkstyle Plugin - 코드 스타일 검사
    id 'checkstyle'

    // SpotBugs Plugin - 코드 품질 검사
    id 'com.github.spotbugs' version '6.1.12'

    // PMD Plugin - 코드 스멜/잠재적 버그 검사
    id 'pmd'
}


checkstyle {
    toolVersion = '10.24.0'
    configFile = file("config/checkstyle/google_checks.xml")
    // 테스트 제외
    sourceSets = [sourceSets.main]
    ignoreFailures = true // <- 에러 무시하고 빌드 계속
}

pmd {
    toolVersion = '7.13.0'
    ruleSets = []  // 기본 룰셋 제거
    ruleSetFiles = files("$rootDir/config/pmd/pmd-ruleset.xml")
    sourceSets = [sourceSets.main] // test 제외
    ignoreFailures = true // <- 에러 무시하고 빌드 계속
}

spotbugs {
    toolVersion = '4.9.3'
    ignoreFailures = true // <- 에러 무시하고 빌드 계속
}

group = 'org.choon'
version = '0.0.1-SNAPSHOT'

bootJar {
    archiveFileName = "careerbee-api.jar"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.5'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j:8.4.0'
    implementation 'org.hibernate.orm:hibernate-spatial:6.6.13.Final'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.9'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    // QueryDSL - OpenFeign
    implementation "io.github.openfeign.querydsl:querydsl-core:6.11"
    implementation "io.github.openfeign.querydsl:querydsl-jpa:6.11"
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:6.11:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.5'
    testImplementation 'org.springframework.security:spring-security-test:6.4.5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Sentry SDK
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.5.0'

    // Spring Actuator + Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // S3
    implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.3.1'

    // Spring Retry
    implementation 'org.springframework.retry:spring-retry:2.0.12'

    // Redisson
    implementation "org.redisson:redisson-spring-boot-starter:3.50.0"
}

sentry {
    // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
    // This enables source context, allowing you to see your source
    // code as part of your stack traces in Sentry.
    includeSourceContext = true

    org = "2-7i"
    projectName = "ssmu-dev-backend"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}

// build.gradle에 추가
tasks.named('check') {
    dependsOn 'checkstyleMain', 'pmdMain', 'spotbugsMain'
}

tasks.named('test') {
    useJUnitPlatform()
}
